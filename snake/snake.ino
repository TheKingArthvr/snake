//#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define OLED_RESET 4




#define DISPLAY_WIDTH 128 // OLED display width, in pixels
#define DISPLAY_HEIGHT 64 // OLED display height, in pixels

Adafruit_SSD1306 display(DISPLAY_WIDTH, DISPLAY_HEIGHT, &Wire, OLED_RESET);

#define LOGO_HEIGHT   16
#define LOGO_WIDTH    16

#define NUMFLAKES 5
#define XPOS 0
#define YPOS 1
#define DELTAY 2

#define LOGO16_GLCD_HEIGHT 16
#define LOGO16_GLCD_WIDTH  16

#define map1_BMPWIDTH  128

const unsigned char map1[] PROGMEM = {
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111100,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ..........................................................###########...........................................................
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00011111,B11111100,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ...........................................................###########..........................................................
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00011111,B11111100,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ...........................................................###########..........................................................
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00011111,B11111100,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ...........................................................###########..........................................................
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00011111,B11111100,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ...........................................................###########..........................................................
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B11111100,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ........................................##................############..........................................................
  B00000000,B00000000,B00000000,B00000011,B11111111,B11100000,B00000000,B00111111,B11111100,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ................................###########...............############..........................................................
  B00000000,B00000000,B00000000,B00000011,B11111111,B11100000,B00000000,B00111111,B11111100,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ...............................############...............############..........................................................
  B00000000,B00000000,B00000000,B00000011,B11111111,B11100000,B00000000,B00111111,B11111100,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ..............................#############...............############..........................................................
  B00000000,B00000000,B00000000,B00000011,B11000000,B11100000,B00000000,B01111111,B11111100,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ..............................####......###..............#############..........................................................
  B00000000,B00000000,B00000000,B00000011,B11000000,B11100000,B00000011,B11111111,B11111100,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ..............................####......###...........################..........................................................
  B00000000,B00000000,B00000000,B00000011,B11000000,B11100000,B00000111,B11111111,B11111100,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ..............................####......###..........#################..........................................................
  B00000000,B00000000,B00000000,B00000011,B11000000,B11100000,B00011111,B11111111,B11111100,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ..............................####......###........###################..........................................................
  B00000000,B00000000,B00000000,B00000011,B11111111,B11111111,B11111111,B11111111,B11111100,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ..............................########################################..........................................................
  B00000000,B00000000,B00000000,B00000011,B11111111,B11111111,B11111111,B11111111,B11111100,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ..............................########################################..........................................................
  B00000000,B00000000,B00000000,B00000011,B11111111,B11111111,B11111111,B11111111,B11111100,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ..............................########################################..........................................................
  B00000000,B00000000,B00000000,B00000011,B11111111,B11111111,B11111111,B11111111,B11111100,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ..............................########################################..........................................................
  B00000000,B00000000,B00000000,B00000011,B11111111,B11111111,B11111111,B11111111,B11111100,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ..............................########################################..........................................................
  B00000000,B00000000,B00000000,B00000111,B11111111,B11111111,B11111111,B11111111,B11111100,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // .............................#########################################..........................................................
  B00000000,B00000000,B00000000,B00001111,B11111111,B11111111,B11111111,B11111111,B11111100,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ............................##########################################..........................................................
  B00000000,B00000000,B00000000,B00011111,B11111111,B11111111,B11111111,B11111111,B11111100,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ...........................###########################################..........................................................
  B00000000,B00000000,B00000000,B00111111,B11111111,B11111111,B11111111,B11111111,B11111111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ..........................##############################################........................................................
  B00000000,B00000000,B00000000,B01111111,B11111111,B11111111,B11111111,B11111111,B11111111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // .........................###############################################........................................................
  B00000000,B00000000,B00000000,B01111111,B11111111,B11111111,B11111111,B11111111,B11111111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ........................################################################........................................................
  B00000000,B00000000,B00000001,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ........................################################################........................................................
  B00000000,B00000000,B00000011,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ......................##################################################........................................................
  B00000000,B00000000,B00111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ..................######################################################........................................................
  B00000000,B00000000,B01111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // .................#######################################################........................................................
  B00000000,B00000000,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ................########################################################........................................................
  B00000000,B00000001,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ...............##########################################################.......................................................
  B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // #############################################################################..............................####################.
  B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111, // ################################################################################################################################
  B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111, // ################################################################################################################################
  B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111, // ################################################################################################################################
  B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111, // ################################################################################################################################
  B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111, // #.##############################################################################################################################
  B00000000,B00001111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111, // ............#######################################################################################################.............
  B00000000,B00000011,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B00000000,B00000000, // ..............##################################################################################################................
  B00000000,B00000000,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B00000000,B00000000, // ................################################################################################################................
  B00000000,B00000000,B01111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111110,B00000000,B00000000, // .................##############################################################################################.................
  B00000000,B00000000,B01111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111110,B00000000,B00000000, // .................##############################################################################################.................
  B00000000,B00000000,B01111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111110,B00000000,B00000000, // .................##############################################################################################.................
  B00000000,B00000000,B01111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B00000000,B00000000, // .................###############################################################################################................
  B00000000,B00000000,B01111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B00000000,B00000000, // .................###############################################################################################................
  B00000000,B00000000,B01111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111110,B00000000,B00000000, // .................##############################################################################################.................
  B00000000,B00000000,B01111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111110,B00000000,B00000000, // .................##############################################################################################.................
  B00000000,B00000000,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111100,B00000000,B00000000, // ................##############################################################################################..................
  B00000000,B00000000,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111100,B00000000,B00000000, // ................##############################################################################################..................
  B00000000,B00000000,B01111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111100,B00000000,B00000000, // .................#############################################################################################..................
  B00000000,B00000000,B00111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111100,B00000000,B00000000, // ..................############################################################################################..................
  B00000000,B00000000,B00111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111100,B00000000,B00000000, // ..................############################################################################################..................
  B00000000,B00000000,B00111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111100,B00000000,B00000000, // ..................############################################################################################..................
  B00000000,B00000000,B00111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111100,B00000000,B00000000, // ..................############################################################################################..................
  B00000000,B00000000,B00111111,B11111111,B11111111,B11111100,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111000,B00000000,B00000000,B00000000, // ..................############################..#####################################################...........................
  B00000000,B00000000,B00000011,B11111111,B11111111,B11111000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ......................######.......##########...................................................................................
  B00000000,B00000000,B00000000,B11111111,B11111111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ........................###.........###.........................................................................................
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ................................................................................................................................
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ................................................................................................................................
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ................................................................................................................................
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ................................................................................................................................
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ................................................................................................................................
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ................................................................................................................................
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000, // ................................................................................................................................
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000  // ................................................................................................................................
};


#define link_BMPWIDTH  30

const unsigned char link[] PROGMEM = {
  B00000000,B00001111,B11110000,B00000000,
  B00000000,B00011111,B11111000,B00000000,
  B00000000,B00111111,B11111000,B00000000,
  B00000000,B00110000,B00011000,B00000000,
  B00000000,B00110000,B00001000,B00000000,
  B00000000,B00110100,B01101000,B00000000,
  B00000000,B00000100,B00000001,B00000000,
  B00000000,B00000000,B00000011,B00000000,
  B00000000,B00000011,B10000011,B00000000,
  B00000011,B11111001,B00000011,B10000000,
  B00000011,B11111000,B00000111,B10000000,
  B00000111,B01111100,B00000011,B10000000,
  B00000110,B01111110,B00000001,B10000000,
  B00000100,B00111011,B10000000,B10000000,
  B00000111,B01111001,B11111000,B00000000,
  B00000111,B01111001,B11111000,B00000000,
  B00000111,B01111011,B10000000,B00000000,
  B00000111,B11111000,B00000000,B00000000,
  B00000111,B11111000,B00000000,B00000000,
  B00000000,B00000100,B01111000,B00000000,
  B00000000,B00111100,B00100000,B00000000,
  B00000000,B00111100,B00000000,B00000000
};

static const unsigned char PROGMEM logo16_glcd_bmp[] =
{ B00000000, B11000000,
  B00000001, B11000000,
  B00000001, B11000000,
  B00000011, B11100000,
  B11110011, B11100000,
  B11111110, B11111000,
  B01111110, B11111111,
  B00110011, B10011111,
  B00011111, B11111100,
  B00001101, B01110000,
  B00011011, B10100000,
  B00111111, B11100000,
  B00111111, B11110000,
  B01111100, B11110000,
  B01110000, B01110000,
  B00000000, B00110000
};

int teil=0;

#if (SSD1306_LCDHEIGHT != 32)
#error("Height incorrect, please fix Adafruit_SSD1306.h!");
#endif
const int up = 53;
const int down = 51;
const int left = 49;
const int right = 47;
int buttonStateUp = 0;
int buttonStateDown = 0;
int buttonStateLeft = 0;
int buttonStateRight = 0;
int snakeDirection = 0;

int pointY1 = 31;
int pointY2 = 31;
int pointY3 = 32;
int pointY4 = 32;
int pointX1 = 63;
int pointX2 = 64;
int pointX3 = 63;
int pointX4 = 64;

int foodY1 = -1;
int foodY2 = -1;
int foodY3 = -1;
int foodY4 = -1;
int foodX1 = -1;
int foodX2 = -1;
int foodX3 = -1;
int foodX4 = -1;

void setup()   {
  Serial.begin(9600);
  pinMode (up, INPUT);
  pinMode (down, INPUT);
  pinMode (left, INPUT);
  pinMode (right, INPUT);
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);
  display.clearDisplay();
  buttonStateUp = digitalRead(up);
  if (buttonStateUp == HIGH){
    ;
  }
  else{
  display.setTextSize(2);
  display.setCursor(25, 0);
  display.println("SKIP?");
  display.setCursor(45, 30);
  display.println("3");
  buttonStateUp = digitalRead(up);
  delay(1000);
  buttonStateUp = digitalRead(up);
  if (buttonStateUp == HIGH){
    ;
  }
  else{
  display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(25, 0);
  display.println("SKIP?");
  display.setCursor(45, 30);
  display.println("2");
  buttonStateUp = digitalRead(up);
  delay(1000);
  buttonStateUp = digitalRead(up);
  if (buttonStateUp == HIGH){
    ;
  }
  else{
  display.clearDisplay();
    display.setTextSize(2);
  display.setCursor(25, 0);
  display.println("SKIP?");
  display.setCursor(45, 30);
  display.println("1");
  buttonStateUp = digitalRead(up);
  delay(1000);
  buttonStateUp = digitalRead(up);
  if (buttonStateUp == HIGH){
    ;
  }
  else{
  
    display.clearDisplay();
  

    // Show the display buffer on the hardware.
    // NOTE: You must call display after making any drawing commands
    // to make them visible on the display hardware!
  
  //Josia & Arthur
  display.setTextSize(2);
  display.setTextColor(WHITE);
  display.setCursor(25, 0);
  display.println("JOSIA &");
  display.setTextSize(2);
  display.setCursor(25, 16);
  display.println("ARTHUR");
  display.display();
  delay(2000);

  //SNAKE
  display.setTextSize(1);
  display.setCursor(40, 40);
  display.println("S");
  display.display();
  delay(500);
  display.setCursor(48, 40);
  display.println("N");
  display.display();
  delay(500);
  display.setCursor(56, 40);
  display.println("A");
  display.display();
  delay(500);
  display.setCursor(64, 40);
  display.println("K");
  display.display();
  delay(500);
  display.setCursor(72, 40);
  display.println("E");
  display.display();
  delay(2000);

  display.setTextSize(1);
  display.setCursor(35, 55);
  display.println(" Vers.0.1");
  display.display();
  delay(5000);
  display.clearDisplay();
    }
  }}}
/*
    // draw scrolling text
    testscrolltext();
    delay(10000);
    display.clearDisplay();

    // invert the display
    display.invertDisplay(true);
    delay(1000);
    display.invertDisplay(false);
    delay(1000);
    display.clearDisplay();

    // draw a bitmap icon and 'animate' movement
    testdrawbitmap(logo16_glcd_bmp, LOGO16_GLCD_HEIGHT, LOGO16_GLCD_WIDTH);
    */
   food();
}
void loop() {
 /*display.drawBitmap(0, 0,  map1, 128, 64, 1);
  display.drawCircle(display.width() / 2, display.height() / 2, 10, WHITE);
  display.display();
  delay(2000);

  display.clearDisplay();


  display.drawBitmap(50, 16,  logo16_glcd_bmp, 16, 16, 1);
  display.display();
  delay(2000);

  display.clearDisplay();
  */
display.drawPixel(pointX1, pointY1, WHITE);
display.drawPixel(pointX2, pointY2, WHITE);
display.drawPixel(pointX3, pointY3, WHITE);
display.drawPixel(pointX4, pointY4, WHITE);
display.display();
buttonStateUp = digitalRead(up);
buttonStateDown = digitalRead(down);
buttonStateLeft = digitalRead(left);
buttonStateRight = digitalRead(right);

if (buttonStateUp == HIGH){
  
  while (buttonStateDown == LOW && buttonStateLeft == LOW && buttonStateRight == LOW){
    moveUp();
    if(((pointY1 == foodY1 && pointX1 == foodX1) || (pointY1 == foodY2 && pointX1 == foodX2) ||(pointY1 == foodY3 && pointX1 == foodX3) ||(pointY1 == foodY4 && pointX1 == foodX4)) ||((pointY2 == foodY1 && pointX2 == foodX1) || (pointY2 == foodY2 && pointX2 == foodX2) ||(pointY2 == foodY3 && pointX2 == foodX3) ||(pointY2 == foodY4 && pointX2 == foodX4)) ||((pointY3 == foodY1 && pointX3 == foodX1) || (pointY3 == foodY2 && pointX3 == foodX2) ||(pointY3 == foodY3 && pointX3 == foodX3) ||(pointY3 == foodY4 && pointX3 == foodX4)) ||((pointY4 == foodY1 && pointX4 == foodX1) || (pointY4 == foodY2 && pointX4 == foodX2) ||(pointY4 == foodY3 && pointX4 == foodX3) ||(pointY4 == foodY4 && pointX4 == foodX4))){    
    food();
    display.drawPixel (foodX1, foodY1, WHITE);
    display.drawPixel (foodX2, foodY2, WHITE);
    display.drawPixel (foodX3, foodY3, WHITE);
    display.drawPixel (foodX4, foodY4, WHITE);
display.display();
  }
    else{
      display.drawPixel (foodX1, foodY1, WHITE);
    display.drawPixel (foodX2, foodY2, WHITE);
    display.drawPixel (foodX3, foodY3, WHITE);
    display.drawPixel (foodX4, foodY4, WHITE);
display.display();
    }
    Serial.println("up");
    buttonStateUp = digitalRead(up);
buttonStateDown = digitalRead(down);
buttonStateLeft = digitalRead(left);
buttonStateRight = digitalRead(right);
  }
}
else if (buttonStateDown == HIGH){
    while (buttonStateUp == LOW && buttonStateLeft == LOW && buttonStateRight == LOW){
    moveDown();
        if(((pointY1 == foodY1 && pointX1 == foodX1) || (pointY1 == foodY2 && pointX1 == foodX2) ||(pointY1 == foodY3 && pointX1 == foodX3) ||(pointY1 == foodY4 && pointX1 == foodX4)) ||((pointY2 == foodY1 && pointX2 == foodX1) || (pointY2 == foodY2 && pointX2 == foodX2) ||(pointY2 == foodY3 && pointX2 == foodX3) ||(pointY2 == foodY4 && pointX2 == foodX4)) ||((pointY3 == foodY1 && pointX3 == foodX1) || (pointY3 == foodY2 && pointX3 == foodX2) ||(pointY3 == foodY3 && pointX3 == foodX3) ||(pointY3 == foodY4 && pointX3 == foodX4)) ||((pointY4 == foodY1 && pointX4 == foodX1) || (pointY4 == foodY2 && pointX4 == foodX2) ||(pointY4 == foodY3 && pointX4 == foodX3) ||(pointY4 == foodY4 && pointX4 == foodX4))){
    food();
    display.drawPixel (foodX1, foodY1, WHITE);
    display.drawPixel (foodX2, foodY2, WHITE);
    display.drawPixel (foodX3, foodY3, WHITE);
    display.drawPixel (foodX4, foodY4, WHITE);
display.display();
    }
    else{
    display.drawPixel (foodX1, foodY1, WHITE);
    display.drawPixel (foodX2, foodY2, WHITE);
    display.drawPixel (foodX3, foodY3, WHITE);
    display.drawPixel (foodX4, foodY4, WHITE);
display.display();
    }
    Serial.println("down");
    buttonStateUp = digitalRead(up);
buttonStateDown = digitalRead(down);
buttonStateLeft = digitalRead(left);
buttonStateRight = digitalRead(right);
  }
}
else if (buttonStateLeft == HIGH){
    while (buttonStateUp == LOW && buttonStateDown == LOW && buttonStateRight == LOW){
    moveLeft();
     if(((pointY1 == foodY1 && pointX1 == foodX1) || (pointY1 == foodY2 && pointX1 == foodX2) ||(pointY1 == foodY3 && pointX1 == foodX3) ||(pointY1 == foodY4 && pointX1 == foodX4)) ||((pointY2 == foodY1 && pointX2 == foodX1) || (pointY2 == foodY2 && pointX2 == foodX2) ||(pointY2 == foodY3 && pointX2 == foodX3) ||(pointY2 == foodY4 && pointX2 == foodX4)) ||((pointY3 == foodY1 && pointX3 == foodX1) || (pointY3 == foodY2 && pointX3 == foodX2) ||(pointY3 == foodY3 && pointX3 == foodX3) ||(pointY3 == foodY4 && pointX3 == foodX4)) ||((pointY4 == foodY1 && pointX4 == foodX1) || (pointY4 == foodY2 && pointX4 == foodX2) ||(pointY4 == foodY3 && pointX4 == foodX3) ||(pointY4 == foodY4 && pointX4 == foodX4))){  
    food();
    display.drawPixel (foodX1, foodY1, WHITE);
    display.drawPixel (foodX2, foodY2, WHITE);
    display.drawPixel (foodX3, foodY3, WHITE);
    display.drawPixel (foodX4, foodY4, WHITE);
display.display();
    }
    else{
      display.drawPixel (foodX1, foodY1, WHITE);
    display.drawPixel (foodX2, foodY2, WHITE);
    display.drawPixel (foodX3, foodY3, WHITE);
    display.drawPixel (foodX4, foodY4, WHITE);
display.display();
    }
    Serial.println("left");
    buttonStateUp = digitalRead(up);
buttonStateDown = digitalRead(down);
buttonStateLeft = digitalRead(left);
buttonStateRight = digitalRead(right);
  }
}
else if (buttonStateRight == HIGH){
    while (buttonStateDown == LOW && buttonStateLeft == LOW && buttonStateUp == LOW){
    moveRight();
    if(((pointY1 == foodY1 && pointX1 == foodX1) || (pointY1 == foodY2 && pointX1 == foodX2) ||(pointY1 == foodY3 && pointX1 == foodX3) ||(pointY1 == foodY4 && pointX1 == foodX4)) ||((pointY2 == foodY1 && pointX2 == foodX1) || (pointY2 == foodY2 && pointX2 == foodX2) ||(pointY2 == foodY3 && pointX2 == foodX3) ||(pointY2 == foodY4 && pointX2 == foodX4)) ||((pointY3 == foodY1 && pointX3 == foodX1) || (pointY3 == foodY2 && pointX3 == foodX2) ||(pointY3 == foodY3 && pointX3 == foodX3) ||(pointY3 == foodY4 && pointX3 == foodX4)) ||((pointY4 == foodY1 && pointX4 == foodX1) || (pointY4 == foodY2 && pointX4 == foodX2) ||(pointY4 == foodY3 && pointX4 == foodX3) ||(pointY4 == foodY4 && pointX4 == foodX4))){
    food();
    display.drawPixel (foodX1, foodY1, WHITE);
    display.drawPixel (foodX2, foodY2, WHITE);
    display.drawPixel (foodX3, foodY3, WHITE);
    display.drawPixel (foodX4, foodY4, WHITE);
display.display();
    }
    else{
      display.drawPixel (foodX1, foodY1, WHITE);
    display.drawPixel (foodX2, foodY2, WHITE);
    display.drawPixel (foodX3, foodY3, WHITE);
    display.drawPixel (foodX4, foodY4, WHITE);
display.display();
    }
    Serial.println("right");
    buttonStateUp = digitalRead(up);
buttonStateDown = digitalRead(down);
buttonStateLeft = digitalRead(left);
buttonStateRight = digitalRead(right);
  }
}
else {
;
}
}

void moveUp(void){
  display.clearDisplay();
  if (pointY1 >= 3){
  pointY1 = pointY1 - 2;
  pointY2 = pointY2 - 2;
  pointY3 = pointY3 - 2;
  pointY4 = pointY4 - 2;
  display.drawPixel(pointX1, pointY1, WHITE);
display.drawPixel(pointX2, pointY2, WHITE);
display.drawPixel(pointX3, pointY3, WHITE);
display.drawPixel(pointX4, pointY4, WHITE);
display.display();
  delay(10);
  }
  else{
  display.setCursor(64, 32);
  display.println(":(");
  display.display();
  delay(500);
  display.clearDisplay();
  }
}

void moveDown(void){
  display.clearDisplay();
  if (pointY4 <= 62){
  pointY1 = pointY1 + 2;
  pointY2 = pointY2 + 2;
  pointY3 = pointY3 + 2;
  pointY4 = pointY4 + 2;
  display.drawPixel(pointX1, pointY1, WHITE);
display.drawPixel(pointX2, pointY2, WHITE);
display.drawPixel(pointX3, pointY3, WHITE);
display.drawPixel(pointX4, pointY4, WHITE);
display.display();
  delay(10);
  }
  else{
  display.setCursor(64, 32);
  display.println(":(");
  display.display();
  delay(500);
  display.clearDisplay();
  }
}

void moveLeft(void){
  display.clearDisplay();
  if (pointX1 >= 3){
  pointX1 = pointX1 - 2;
  pointX2 = pointX2 - 2;
  pointX3 = pointX3 - 2;
  pointX4 = pointX4 - 2;
  display.drawPixel(pointX1, pointY1, WHITE);
display.drawPixel(pointX2, pointY2, WHITE);
display.drawPixel(pointX3, pointY3, WHITE);
display.drawPixel(pointX4, pointY4, WHITE);
display.display();
  delay(10);
  }
  else{
  display.setCursor(64, 32);
  display.println(":(");
  display.display();
  delay(500);
  display.clearDisplay();
  }
}

void moveRight(void){
  display.clearDisplay();
  if (pointX4 <= 125){
  pointX1 = pointX1 + 2;
  pointX2 = pointX2 + 2;
  pointX3 = pointX3 + 2;
  pointX4 = pointX4 + 2;
  display.drawPixel(pointX1, pointY1, WHITE);
display.drawPixel(pointX2, pointY2, WHITE);
display.drawPixel(pointX3, pointY3, WHITE);
display.drawPixel(pointX4, pointY4, WHITE);
display.display();


  delay(10);
}
else{
  display.setCursor(64, 32);
  display.println(":(");
  display.display();
  delay(500);
  display.clearDisplay();
}
}

void food(void){
  foodY1 = random(64);
  foodX1 = random(128);
  foodY2 = foodY1;
  foodY3 = foodY1 + 1;
  foodY4 = foodY3;
  foodX2 = foodX1 + 1;
  foodX3 = foodX1;
  foodX4 = foodX2;
}
/*
void calculateSnake() {
  switch (snakeDirection) {
    case up:
      pointY--;
      fixEdge();
      display.drawPixel(0, pointY, pointX, 1);
      display.display();
      break;

    case right:
      pointX++;
      fixEdge();
      display.drawPixel(0, pointY, pointX, 1);
      display.display();
      break;

    case down:
      pointY++;
      fixEdge();
      display.drawPixel(0, pointY, pointX, 1);
      display.display();
      break;

    case left:
      pointX--;
      fixEdge();
      display.drawPixel(0, pointY, pointX, 1);
      display.display();
      break;

    default: // if the snake is not moving, exit
      return;
  }
}*/
